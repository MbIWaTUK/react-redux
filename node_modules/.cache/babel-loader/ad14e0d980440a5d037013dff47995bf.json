{"ast":null,"code":"import { userAPI } from \"../api/api\";\nconst ADD_POST = \"ADD-POST\";\nconst CHANGE_MESSAGE = \"CHANGE-MESSAGE\";\nconst CHANGE_PROFILE_INFO = \"CHANGE-PROFILE-INFO\";\nlet initialState = {\n  user: null,\n  posts: [{\n    id: 1,\n    message: \"qwerty\",\n    likeCount: 10\n  }, {\n    id: 2,\n    message: \"sssss\",\n    likeCount: 5\n  }],\n  newPostText: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPosts = {\n          id: state.posts.length + 1,\n          message: state.newPostText,\n          likeCount: 0\n        };\n        return { ...state,\n          posts: [...state.posts, newPosts],\n          newPostText: \"\"\n        };\n      }\n\n    case CHANGE_MESSAGE:\n      {\n        return { ...state,\n          newPostText: action.msg\n        };\n      }\n\n    case CHANGE_PROFILE_INFO:\n      {\n        return { ...state,\n          user: action.user\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const handleAddPostActionCreate = () => ({\n  type: ADD_POST\n});\nexport const handleChangeMessageActionCreate = msg => {\n  return {\n    type: CHANGE_MESSAGE,\n    msg\n  };\n};\nexport const changeProfileInfo = user => ({\n  type: CHANGE_PROFILE_INFO,\n  user\n});\nexport const getUserProfileThunkCreator = userId => {\n  return dispatch => {\n    userAPI.userProfile(userId).then(res => {\n      dispatch(changeProfileInfo(res.data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["/home/bravedevuser/projects/react-test/social-redux/react-redux/src/redux/profileReducer.js"],"names":["userAPI","ADD_POST","CHANGE_MESSAGE","CHANGE_PROFILE_INFO","initialState","user","posts","id","message","likeCount","newPostText","profileReducer","state","action","type","newPosts","length","msg","handleAddPostActionCreate","handleChangeMessageActionCreate","changeProfileInfo","getUserProfileThunkCreator","userId","dispatch","userProfile","then","res","data"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,IADW;AAEjBC,EAAAA,KAAK,EAAE,CACL;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,QAAlB;AAA4BC,IAAAA,SAAS,EAAE;AAAvC,GADK,EAEL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,OAAlB;AAA2BC,IAAAA,SAAS,EAAE;AAAtC,GAFK,CAFU;AAMjBC,EAAAA,WAAW,EAAE;AANI,CAAnB;;AAQA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKb,QAAL;AAAe;AACb,YAAIc,QAAQ,GAAG;AAAER,UAAAA,EAAE,EAAEK,KAAK,CAACN,KAAN,CAAYU,MAAZ,GAAqB,CAA3B;AAA8BR,UAAAA,OAAO,EAAEI,KAAK,CAACF,WAA7C;AAA0DD,UAAAA,SAAS,EAAE;AAArE,SAAf;AACA,eAAO,EACL,GAAGG,KADE;AAELN,UAAAA,KAAK,EAAE,CAAC,GAAGM,KAAK,CAACN,KAAV,EAAiBS,QAAjB,CAFF;AAGLL,UAAAA,WAAW,EAAE;AAHR,SAAP;AAKD;;AAED,SAAKR,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGU,KADE;AAELF,UAAAA,WAAW,EAAEG,MAAM,CAACI;AAFf,SAAP;AAID;;AAED,SAAKd,mBAAL;AAA0B;AACxB,eAAO,EACL,GAAGS,KADE;AAELP,UAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFR,SAAP;AAID;;AAED;AACE,aAAOO,KAAP;AA1BJ;AA8BD,CA/BD;;AAiCA,OAAO,MAAMM,yBAAyB,GAAG,OAAO;AAAEJ,EAAAA,IAAI,EAAEb;AAAR,CAAP,CAAlC;AACP,OAAO,MAAMkB,+BAA+B,GAAIF,GAAD,IAAS;AACtD,SAAO;AAAEH,IAAAA,IAAI,EAAEZ,cAAR;AAAwBe,IAAAA;AAAxB,GAAP;AACD,CAFM;AAGP,OAAO,MAAMG,iBAAiB,GAAIf,IAAD,KAAW;AAAES,EAAAA,IAAI,EAAEX,mBAAR;AAA6BE,EAAAA;AAA7B,CAAX,CAA1B;AAEP,OAAO,MAAMgB,0BAA0B,GAAIC,MAAD,IAAU;AAElD,SAAQC,QAAD,IAAc;AACrBvB,IAAAA,OAAO,CAACwB,WAAR,CAAoBF,MAApB,EAA4BG,IAA5B,CAAiCC,GAAG,IAAI;AACtCH,MAAAA,QAAQ,CAACH,iBAAiB,CAACM,GAAG,CAACC,IAAL,CAAlB,CAAR;AACD,KAFD;AAGD,GAJC;AAKD,CAPM;AASP,eAAehB,cAAf","sourcesContent":["import { userAPI } from \"../api/api\"\r\n\r\nconst ADD_POST = \"ADD-POST\"\r\nconst CHANGE_MESSAGE = \"CHANGE-MESSAGE\"\r\nconst CHANGE_PROFILE_INFO = \"CHANGE-PROFILE-INFO\"\r\n\r\nlet initialState = {\r\n  user: null,\r\n  posts: [\r\n    { id: 1, message: \"qwerty\", likeCount: 10 },\r\n    { id: 2, message: \"sssss\", likeCount: 5 }\r\n  ],\r\n  newPostText: \"\"\r\n}\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case ADD_POST: {\r\n      let newPosts = { id: state.posts.length + 1, message: state.newPostText, likeCount: 0 }\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPosts],\r\n        newPostText: \"\"\r\n      }\r\n    }\r\n\r\n    case CHANGE_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        newPostText: action.msg\r\n      }\r\n    }\r\n\r\n    case CHANGE_PROFILE_INFO: {\r\n      return {\r\n        ...state,\r\n        user: action.user\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n\r\n\r\n}\r\n\r\nexport const handleAddPostActionCreate = () => ({ type: ADD_POST })\r\nexport const handleChangeMessageActionCreate = (msg) => {\r\n  return { type: CHANGE_MESSAGE, msg }\r\n}\r\nexport const changeProfileInfo = (user) => ({ type: CHANGE_PROFILE_INFO, user })\r\n\r\nexport const getUserProfileThunkCreator = (userId)=>{\r\n\r\n  return (dispatch) => {\r\n  userAPI.userProfile(userId).then(res => {\r\n    dispatch(changeProfileInfo(res.data))\r\n  })\r\n}\r\n}\r\n\r\nexport default profileReducer"]},"metadata":{},"sourceType":"module"}