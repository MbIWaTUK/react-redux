{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/bravedevuser/projects/react-test/react-social-redux/react-redux/src/components/profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport userDefault from \"../../logo.svg\";\nimport Preloader from \"../../Preloader\";\nimport { useRouteMatch } from \"react-router-dom\";\n\nconst Profile = props => {\n  _s();\n\n  let areaRef = React.useRef();\n  let btnRef = React.useRef();\n  let location = useRouteMatch();\n\n  let handleAddPost = () => {\n    props.addPost(); // let action = handleAddPostActionCreate()\n    // dispatch(action)\n  };\n\n  let handleChangeMessage = () => {\n    let text = areaRef.current.value;\n    props.updateText(text); // let action = handleChangeMessageActionCreate(text)\n    // dispatch(action)\n  };\n\n  if (!props.profilePage.user) {\n    return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"INFO:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.profilePage.user.photos && props.profilePage.user.photos.small ? props.profilePage.user.photos.small : userDefault,\n      style: {\n        width: \"200px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: props.profilePage.user.aboutMe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: props.profilePage.user.fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: props.profilePage.user.lookingForAJob === true ? \"в поиске работы\" : \"нашел работу\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: props.profilePage.user.lookingForAJobDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: props.profilePage.user.userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: areaRef,\n      onChange: handleChangeMessage,\n      value: props.profilePage.newPostText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddPost,\n      ref: btnRef,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.profilePage.posts.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: s.message\n      }, s.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Profile, \"ICxP8t3tWVVEFP8NSdASXGS+SsU=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/bravedevuser/projects/react-test/react-social-redux/react-redux/src/components/profile/Profile.js"],"names":["React","Preloader","useRouteMatch","Profile","props","areaRef","useRef","btnRef","location","handleAddPost","addPost","handleChangeMessage","text","current","value","updateText","profilePage","user","photos","small","userDefault","width","aboutMe","fullName","lookingForAJob","lookingForAJobDescription","userId","newPostText","posts","map","s","message","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAAUC,aAAV,QAA+B,kBAA/B;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,MAAIC,OAAO,GAAGL,KAAK,CAACM,MAAN,EAAd;AACA,MAAIC,MAAM,GAAGP,KAAK,CAACM,MAAN,EAAb;AACA,MAAIE,QAAQ,GAAGN,aAAa,EAA5B;;AAEA,MAAIO,aAAa,GAAG,MAAM;AAExBL,IAAAA,KAAK,CAACM,OAAN,GAFwB,CAGxB;AACA;AACD,GALD;;AAOA,MAAIC,mBAAmB,GAAG,MAAM;AAC9B,QAAIC,IAAI,GAAGP,OAAO,CAACQ,OAAR,CAAgBC,KAA3B;AACAV,IAAAA,KAAK,CAACW,UAAN,CAAiBH,IAAjB,EAF8B,CAG9B;AACA;AACD,GALD;;AAOA,MAAI,CAACR,KAAK,CAACY,WAAN,CAAkBC,IAAvB,EAA6B;AAC3B,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAEb,KAAK,CAACY,WAAN,CAAkBC,IAAlB,CAAuBC,MAAvB,IACTd,KAAK,CAACY,WAAN,CAAkBC,IAAlB,CAAuBC,MAAvB,CAA8BC,KADrB,GAEPf,KAAK,CAACY,WAAN,CAAkBC,IAAlB,CAAuBC,MAAvB,CAA8BC,KAFvB,GAGNC,WAHJ;AAGiB,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP;AAHxB;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAA,8BACE;AAAA,kBAAKjB,KAAK,CAACY,WAAN,CAAkBC,IAAlB,CAAuBK;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA,kBAAKlB,KAAK,CAACY,WAAN,CAAkBC,IAAlB,CAAuBM;AAA5B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAKnB,KAAK,CAACY,WAAN,CAAkBC,IAAlB,CAAuBO,cAAvB,KAA0C,IAA1C,GAAiD,iBAAjD,GAAqE;AAA1E;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,kBAAKpB,KAAK,CAACY,WAAN,CAAkBC,IAAlB,CAAuBQ;AAA5B;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,kBAAKrB,KAAK,CAACY,WAAN,CAAkBC,IAAlB,CAAuBS;AAA5B;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAcE;AAAU,MAAA,GAAG,EAAErB,OAAf;AAAwB,MAAA,QAAQ,EAAEM,mBAAlC;AAAuD,MAAA,KAAK,EAAEP,KAAK,CAACY,WAAN,CAAkBW;AAAhF;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE;AAAQ,MAAA,OAAO,EAAElB,aAAjB;AAAgC,MAAA,GAAG,EAAEF,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAgBE;AAAA,gBACGH,KAAK,CAACY,WAAN,CAAkBY,KAAlB,CAAwBC,GAAxB,CAA4BC,CAAC,iBAC5B;AAAA,kBAAgBA,CAAC,CAACC;AAAlB,SAASD,CAAC,CAACE,EAAX;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA,kBADF;AAwBD,CA9CD;;GAAM7B,O;UAGWD,a;;;KAHXC,O;AAgDN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport userDefault from '../../logo.svg'\r\nimport Preloader from \"../../Preloader\";\r\nimport {  useRouteMatch } from \"react-router-dom\"\r\n\r\nconst Profile = (props) => {\r\n  let areaRef = React.useRef()\r\n  let btnRef = React.useRef()\r\n  let location = useRouteMatch()\r\n\r\n  let handleAddPost = () => {\r\n\r\n    props.addPost()\r\n    // let action = handleAddPostActionCreate()\r\n    // dispatch(action)\r\n  }\r\n\r\n  let handleChangeMessage = () => {\r\n    let text = areaRef.current.value\r\n    props.updateText(text)\r\n    // let action = handleChangeMessageActionCreate(text)\r\n    // dispatch(action)\r\n  }\r\n\r\n  if (!props.profilePage.user) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <>\r\n      <p>INFO:</p>\r\n      <img src={props.profilePage.user.photos &&\r\n       props.profilePage.user.photos.small ?\r\n         props.profilePage.user.photos.small \r\n         :userDefault} style={{width:\"200px\"}}/>\r\n      <ul>\r\n        <li>{props.profilePage.user.aboutMe}</li>\r\n        {/* <li>{props.profilePage.user.contacts.facebook}</li> */}\r\n        <li>{props.profilePage.user.fullName}</li>\r\n        <li>{props.profilePage.user.lookingForAJob === true ? \"в поиске работы\" : \"нашел работу\"}</li>\r\n        <li>{props.profilePage.user.lookingForAJobDescription}</li>\r\n        <li>{props.profilePage.user.userId}</li>\r\n      </ul>\r\n      <textarea ref={areaRef} onChange={handleChangeMessage} value={props.profilePage.newPostText} />\r\n      <button onClick={handleAddPost} ref={btnRef}>Click</button>\r\n      <ul>\r\n        {props.profilePage.posts.map(s => (\r\n          <li key={s.id}>{s.message}</li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile"]},"metadata":{},"sourceType":"module"}