{"ast":null,"code":"import { authAPI, userAPI } from \"../../api/api\";\nconst SET_USER_DATA = \"SET_USER_DATA\";\nconst UNFOLLOW = \"UNFOLLOW\";\nlet initialState = {\n  userId: null,\n  login: null,\n  email: null,\n  isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.user,\n        isAuth: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setUserDataActionCreate = (userId, login, email) => ({\n  type: SET_USER_DATA,\n  user: {\n    userId,\n    login,\n    email\n  }\n});\nexport const authThunkCreator = () => {\n  return dispatch => {\n    authAPI.me().then(res => {\n      if (res.data.resultCode === 0) {\n        let {\n          id,\n          login,\n          email\n        } = res.data.data;\n        dispatch(setUserDataActionCreate(id, login, email));\n      }\n    });\n  };\n}; // export const setIsFetchingActionCreate = (isFetching) => ({\n//   type: SET_IS_FETCHING,\n//   isFetching\n// })\n\nexport default authReducer;","map":{"version":3,"sources":["/home/bravedevuser/projects/react-test/social-redux/react-redux/src/redux/AuthReducer.js"],"names":["authAPI","userAPI","SET_USER_DATA","UNFOLLOW","initialState","userId","login","email","isAuth","authReducer","state","action","type","user","setUserDataActionCreate","authThunkCreator","dispatch","me","then","res","data","resultCode","id"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,eAAjC;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,IADS;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,MAAM,EAAE;AAJS,CAAnB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,aAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAEL,WAAGC,MAAM,CAACE,IAFL;AAGLL,QAAAA,MAAM,EAAE;AAHH,OAAP;;AAMF;AACE,aAAOE,KAAP;AATJ;AAWD,CAZD;;AAcA,OAAO,MAAMI,uBAAuB,GAAG,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB,MAA2B;AAChEK,EAAAA,IAAI,EAAEV,aAD0D;AAEhEW,EAAAA,IAAI,EAAE;AACJR,IAAAA,MADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA;AAHI;AAF0D,CAA3B,CAAhC;AASP,OAAO,MAAMQ,gBAAgB,GAAG,MAAI;AAElC,SAASC,QAAD,IAAc;AACpBhB,IAAAA,OAAO,CAACiB,EAAR,GAAaC,IAAb,CAAkBC,GAAG,IAAE;AACrB,UAAIA,GAAG,CAACC,IAAJ,CAASC,UAAT,KAAwB,CAA5B,EAA+B;AAC7B,YAAI;AAAEC,UAAAA,EAAF;AAAMhB,UAAAA,KAAN;AAAaC,UAAAA;AAAb,YAAuBY,GAAG,CAACC,IAAJ,CAASA,IAApC;AACAJ,QAAAA,QAAQ,CAACF,uBAAuB,CAACQ,EAAD,EAAKhB,KAAL,EAAYC,KAAZ,CAAxB,CAAR;AACD;AACF,KALD;AAMD,GAPD;AAQD,CAVM,C,CAWP;AACA;AACA;AACA;;AAEA,eAAeE,WAAf","sourcesContent":["import { authAPI, userAPI } from \"../../api/api\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  login: null,\r\n  email: null,\r\n  isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.user,\r\n        isAuth: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setUserDataActionCreate = (userId, login, email) => ({\r\n  type: SET_USER_DATA,\r\n  user: {\r\n    userId,\r\n    login,\r\n    email,\r\n  },\r\n});\r\n\r\nexport const authThunkCreator = ()=>{\r\n\r\n  return  (dispatch) => {\r\n    authAPI.me().then(res=>{\r\n      if (res.data.resultCode === 0) {\r\n        let { id, login, email } = res.data.data;\r\n        dispatch(setUserDataActionCreate(id, login, email))\r\n      }\r\n    })\r\n  }\r\n}\r\n// export const setIsFetchingActionCreate = (isFetching) => ({\r\n//   type: SET_IS_FETCHING,\r\n//   isFetching\r\n// })\r\n\r\nexport default authReducer;\r\n"]},"metadata":{},"sourceType":"module"}